// Generated by CoffeeScript 1.6.2
(function() {
  var AdviceTree, Clinic, User,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  AdviceTree = (function() {
    function AdviceTree() {
      this.relevant_to_gender || (this.relevant_to_gender = ['male', 'female']);
      this.relevant_to_oritentation || (this.relevant_to_oritentation = ['gay', 'straight', 'bisexual']);
    }

    return AdviceTree;

  })();

  window.AdviceTree = AdviceTree;

  Clinic = (function() {
    function Clinic(data) {
      this.sendReview = __bind(this.sendReview, this);
      this.setCurrent = __bind(this.setCurrent, this);
      this.addToMap = __bind(this.addToMap, this);
      this.getReviews = __bind(this.getReviews, this);
      var key, val;

      console.log("creating with ", data);
      for (key in data) {
        val = data[key];
        this[key] = val;
      }
    }

    Clinic.prototype.getReviews = function() {
      return $.getJSON("");
    };

    Clinic.fetch = function() {
      return $.getJSON('https://data.cityofchicago.org/resource/ajzs-akmm.json', function(data) {
        var clinic, clinics;

        clinics = (function() {
          var _i, _len, _results;

          _results = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            clinic = data[_i];
            _results.push(new Clinic(clinic));
          }
          return _results;
        })();
        Clinic.all = clinics;
        return console.log("clinics are ", clinics);
      });
    };

    Clinic.renderClinicList = function() {
      var clinic, _i, _len, _ref, _results;

      _ref = Clinic.all;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        clinic = _ref[_i];
        _results.push($("#clinicList ul").append("<li>" + clinic.name + "</li>"));
      }
      return _results;
    };

    Clinic.prototype.addToMap = function(map) {};

    Clinic.prototype.setCurrent = function() {};

    Clinic.prototype.sendReview = function(raiting, comment) {
      return $.post('/addReview', {
        clinic: this,
        review: {
          raiting: raiting,
          comment: comment
        }
      });
    };

    return Clinic;

  }).call(this);

  window.Clinic = Clinic;

  User = (function() {
    function User(data) {
      this.location = __bind(this.location, this);      this.age = data.age;
      this.sex = data.sex;
    }

    User.prototype.location = function(data, cb) {
      var _this = this;

      return navigator.geoLocation.getCurrentPosition(function() {
        _this.location = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        if (cb != null) {
          return cb(_this);
        }
      });
    };

    return User;

  })();

  window.User = User;

}).call(this);
